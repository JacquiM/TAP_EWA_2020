# -*- coding: utf-8 -*-
"""Exercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qRlPybTr29j8xSn6bOSKTU1OTnoDVHIN

# 1. Character Input

Create a program that asks the user to enter their name and their age. Print out a message addressed to them that tells them the year that they will turn 100 years old.

Extras:


> 1. Add on to the previous program by asking the user for another number and printing out that many copies of the previous message. (Hint: order of operations exists in Python)
2. Print out that many copies of the previous message on separate lines. (Hint: the string "\n is the same as pressing the ENTER button)
"""

name = input('What is your name:')
age = int(input('What is your age?: '))
turn_100 = 100 - age
years = turn_100 + 2020
print(f' Your name is {name} and your age is  {age}.You will turn 100 years in the year:{years}')

"""2. Ask the user for a number. Depending on whether the number is even or odd, print out an appropriate message to the user. Hint: how does an even / odd number react differently when divided by 2?"""

new_number = int(input("Please input a new number:"))
even = new_number%2
if even !=0:
  print(str(new_number)+ " is an odd number")
else:
  print(str(new_number)+ " is an even number")

"""3. Take a list, say for example this one:

  a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

and write a program that prints out all the elements of the list that are less than 5.

Extras:

Instead of printing the elements one by one, make a new list that has all the elements less than 5 from this list in it and print out this new list.
Write this in one line of Python.

Ask the user for a number and return a list that contains only elements from the original list a that are smaller than that number given by the user.
"""

a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
for items in a:
  newlist = []
  if items < 5:
   newlist.append(items)
   print(newlist)

"""5. Take two lists, say for example these two:

  a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

  b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes.

Extras:

Randomly generate two lists to test this
Write this in one line of Python
"""

a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]

b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
#declare an empty list
empty_list = []
#Check if an item is consisted in the two lists and polulate in empty list

for item1 in a:
  for item2 in b:
    if item1 == item2:
      empty_list.append(item1)
print(empty_list)

# Python program to check
# if a string is palindrome 
# or not
 
x = "malyalam"
 
w = ""
for i in x:
    w = i + w
    print(w)
if (x == w):
    print("It is a palindrome")
else:
    print("No not a palindrome")

"""List comprehensions"""

a= [1,4,9,16,25,36,49,64,81,100]
list1 = [i for i in a if i%2  == 0]
print(list1)

"""Make a two-player Rock-Paper-Scissors game. 
(Hint: Ask for player plays (using input), compare them, print out a message of congratulations to the winner, and ask if the players want to start a new game
"""

#rock
#paper
#scissors

input1 = input('Player1 ,Please put your input,Rock, Paper or Scissors: ')
input2 = input('Player2, Please input your input, Rock, Paper or Scissors: ')

if input1 == 'rock'and input2 =='paper':
  print('player2 wins for Paper covers rock')
elif input1 == 'paper'and input2 =='rock':
  print('player1 wins for Paper covers rock')  
elif input1 =='scissors' and input2 =='paper':
  print('Player1 wins for Scissors cuts paper')
elif input1 =='paper' and input2 =='scissors':
  print('Player2 wins for Scissors cuts paper')
elif input1 =='rock' and input2 =='scissors':
  print('player1 wins for scissors cannot cut rock')
elif input1 =='scissors' and input2 =='rock':
  print('player2 wins for scissors cannot cut rock')
elif input1 == input2:
   print('You have chosen the same items, choose again')
else:
   print("Wrong inputs")
answer = input("Do you want to play another round of rock paper,scissors?: ") 
if answer == "yes":
  print('Awesome, run the code to start the game')    
else:
  print("Thank you for playing Rock, paper, scissors")

"""9. Generate a random number between 1 and 9 (including 1 and 9). Ask the user to guess the number, then tell them whether they guessed too low, too high, or exactly right. (Hint: remember to use the user input lessons from the very first exercise)

Extras:

Keep the game going until the user types “exit”
Keep track of how many guesses the user has taken, and when the game ends, print this out.
"""

import random

"""10.

Take two lists, say for example these two:


	a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
	b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

and write a program that returns a list that contains only the elements that are common between the lists (without duplicates). Make sure your program works on two lists of different sizes. Write this in one line of Python using at least one list comprehension.
"""

import random

a = random.sample(range(1, 30), 12)
b = random.sample(range(1, 30), 16)
print(a)
print(b)
print([i for i in set(a) if i in b])

"""11. Ask the user for a number and determine whether the number is prime or not. (For those who have forgotten, a prime number is a number that has no divisors.)."""

number = int(input("Enter any number: "))

if number > 1:
    for i in range(2, number):
        if (number % i) == 0:
            print(number, "is not a prime number")
            break
    else:
        print(number, "is a prime number")

# if the entered number is less than or equal to 1
# then it is not prime number
else:
    print(number, "is not a prime number")

"""12. Write a program that takes a list of numbers (for example, a = [5, 10, 15, 20, 25]) and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function."""

a = [5, 10, 15, 20, 25]

def first_and_last():
  #new =new_list()
  #for i in a:
    print(a[0])
    print(a[-1])
first_and_last()

"""Write a program that asks the user how many Fibonnaci numbers to generate and then generates them. Take this opportunity to think about how you can use functions. Make sure to ask the user to enter the number of numbers in the sequence to generate.(Hint: The Fibonnaci seqence is a sequence of numbers where the next number in the sequence is the sum of the previous two numbers in the sequence."""

# Program to display the Fibonacci sequence up to n-th term

nterms = int(input("How many terms? "))

# first two terms
n1, n2 = 0, 1
count = 0

# check if the number of terms is valid
if nterms <= 0:
   print("Please enter a positive integer")
elif nterms == 1:
   print("Fibonacci sequence upto",nterms,":")
   print(n1)
else:
   print("Fibonacci sequence:")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       # update values
       n1 = n2
       n2 = nth
       count += 1

"""Write a program (function!) that takes a list and returns a new list that contains all the elements of the first list minus all the duplicates.

Extras:

Write two different functions to do this - one using a loop and constructing a list, and another using sets.
Go back and do Exercise 5 using sets, and write the solution for that in a different function.

Write a program (using functions!) that asks the user for a long string containing multiple words. Print back to the user the same string, except with the words in backwards order. For example, say I type the string:

  My name is Michele
  
Then I would see the string:

  Michele is name My
shown back to me.
"""

string = "My name is Michele"
words = string.split()
words = list(reversed(words))
print(" ".join(words))

"""This is the first 4-chili exercise of this blog! We’ll see what people think, and decide whether or not to continue with 4-chili exercises in the future."""



a = [1, 3, 5, 30, 42, 43, 500]

q=int(input('Which number do you want to look for?'))
while a != []:
    #print(a)

    mid=int(len(a)/2)

    #print(a[mid])

    if q==a[mid]:

        print('The list contains %d.' % q)
        quit()
    elif q>a[mid]:

        #print('higher')

        del a[:mid+1]

 

    elif q<a[mid]:

        #print('lower')

        del a[mid:]

 

   
#print(a)

 

print('''The list doesn't contain %d.''' % q)

"""Create a program that will play the “cows and bulls” game with the user. The game works like this:

Randomly generate a 4-digit number. Ask the user to guess a 4-digit number. For every digit that the user guessed correctly in the correct place, they have a “cow”. For every digit the user guessed correctly in the wrong place is a “bull.” Every time the user makes a guess, tell them how many “cows” and “bulls” they have. Once the user guesses the correct number, the game is over. Keep track of the number of guesses the user makes throughout teh game and tell the user at the end.
"""



